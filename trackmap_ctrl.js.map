{"version":3,"sources":["../src/trackmap_ctrl.js"],"names":["log","msg","getAntimeridianMidpoints","start","end","Math","abs","lng","start_dist_to_antimeridian","end_dist_to_antimeridian","lat_difference","lat","alpha_angle","atan","PI","lat_diff_at_antimeridian","tan","intersection_lat","first_line_end","second_line_start","L","latLng","moment","LegacyGraphHoverClearEvent","LegacyGraphHoverEvent","MetricsPanelCtrl","TrackMapCtrl","$scope","$injector","_","defaults","panel","maxDataPoints","autoZoom","scrollWheelZoom","defaultLayer","showLayerChanger","lineColor","pointColor","layers","tileLayer","attribution","maxZoom","forcedOverlay","subdomains","timeSrv","get","coords","coordSlices","leafMap","layerChanger","polylines","hoverMarker","hoverTarget","setSizePromise","events","on","onInitialized","bind","onInitEditMode","onPanelTeardown","onDataReceived","onDataSnapshotLoad","onRender","onRefresh","dashboard","type","onPanelHover","onPanelClear","onPanelSizeChanged","eachLayer","l","GridLayer","isLoading","once","renderingCompleted","render","addEditorTab","$timeout","cancel","evt","length","target","floor","pos","x","addTo","min","max","idx","exact","timestamp","setLatLng","position","removeFrom","map","invalidateSize","enabled","disable","enable","hadMap","Boolean","setupMap","layer","removeControl","addControl","addDataToMap","forEach","p","id","zoomSnap","zoomDelta","control","circleMarker","color","fillColor","fillOpacity","weight","radius","mapBaseLayerChange","mapZoomToBox","e","overlay","options","setZIndex","zIndex","bounds","reduce","t","c","boxZoomBounds","contains","from","to","Infinity","isFinite","setTime","utc","i","coordSlice","slice","push","polyline","zoomToFit","getBounds","extend","isValid","fitBounds","setView","setStyle","data","lats","datapoints","lons","midpoints","lastTime","snapshotData","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAUA,WAASA,GAAT,CAAaC,GAAb,EAAkB,CAChB;AACA;AACD;;AAED,WAASC,wBAAT,CAAkCC,KAAlC,EAAyCC,GAAzC,EAA8C;AAC5C;AACA,QAAIC,IAAI,CAACC,GAAL,CAASH,KAAK,CAACI,GAAN,GAAYH,GAAG,CAACG,GAAzB,KAAiC,KAArC,EAA2C;AACzC,aAAO,IAAP;AACD;;AACD,QAAMC,0BAA0B,GAAGL,KAAK,CAACI,GAAN,GAAY,CAAZ,GAAgB,MAAMJ,KAAK,CAACI,GAA5B,GAAkC,MAAMJ,KAAK,CAACI,GAAjF;AACA,QAAME,wBAAwB,GAAGL,GAAG,CAACG,GAAJ,GAAU,CAAV,GAAc,MAAMH,GAAG,CAACG,GAAxB,GAA8B,MAAMH,GAAG,CAACG,GAAzE;AACA,QAAMG,cAAc,GAAGL,IAAI,CAACC,GAAL,CAASH,KAAK,CAACQ,GAAN,GAAYP,GAAG,CAACO,GAAzB,CAAvB;AACA,QAAMC,WAAW,GAAGP,IAAI,CAACQ,IAAL,CAAUH,cAAc,IAAIF,0BAA0B,GAAGC,wBAAjC,CAAxB,KAAuF,MAAMJ,IAAI,CAACS,EAAlG,KAAyGX,KAAK,CAACI,GAAN,GAAY,CAAZ,GAAgB,CAAhB,GAAoB,CAAC,CAA9H,CAApB;AACA,QAAMQ,wBAAwB,GAAGV,IAAI,CAACW,GAAL,CAASJ,WAAW,GAAGP,IAAI,CAACS,EAAnB,GAAwB,GAAjC,IAAwCN,0BAAzE;AACA,QAAMS,gBAAgB,GAAGd,KAAK,CAACQ,GAAN,GAAYI,wBAArC;AACA,QAAMG,cAAc,GAAG,CAACD,gBAAD,EAAmBd,KAAK,CAACI,GAAN,GAAY,CAAZ,GAAgB,GAAhB,GAAsB,CAAC,GAA1C,CAAvB;AACA,QAAMY,iBAAiB,GAAG,CAACF,gBAAD,EAAmBb,GAAG,CAACG,GAAJ,GAAU,CAAV,GAAc,GAAd,GAAoB,CAAC,GAAxC,CAA1B;AAEA,WAAO,CAACa,CAAC,CAACC,MAAF,CAASH,cAAT,CAAD,EAA2BE,CAAC,CAACC,MAAF,CAASF,iBAAT,CAA3B,CAAP;AACD;;;;AA9BMC,MAAAA,C;;AACAE,MAAAA,M;;AAEEC,MAAAA,0B,gBAAAA,0B;AAA4BC,MAAAA,qB,gBAAAA,qB;;AAC7BC,MAAAA,gB,kBAAAA,gB;;;8BA4BKC,Y;;;;;AACX,8BAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA;;AAC7B,oCAAMD,MAAN,EAAcC,SAAd;AAEA5B,UAAAA,GAAG,CAAC,aAAD,CAAH;;AAEA6B,UAAAA,CAAC,CAACC,QAAF,CAAW,MAAKC,KAAhB,EAAuB;AACrBC,YAAAA,aAAa,EAAE,GADM;AAErBC,YAAAA,QAAQ,EAAE,IAFW;AAGrBC,YAAAA,eAAe,EAAE,KAHI;AAIrBC,YAAAA,YAAY,EAAE,eAJO;AAKrBC,YAAAA,gBAAgB,EAAE,IALG;AAMrBC,YAAAA,SAAS,EAAE,KANU;AAOrBC,YAAAA,UAAU,EAAE;AAPS,WAAvB,EAL6B,CAe7B;;;AACA,gBAAKC,MAAL,GAAc;AACZ,6BAAiBnB,CAAC,CAACoB,SAAF,CAAY,oDAAZ,EAAkE;AACjFC,cAAAA,WAAW,EAAE,2EADoE;AAEjFC,cAAAA,OAAO,EAAE;AAFwE,aAAlE,CADL;AAKZ,2BAAetB,CAAC,CAACoB,SAAF,CAAY,kDAAZ,EAAgE;AAC7EC,cAAAA,WAAW,EAAE,uRADgE;AAE7EC,cAAAA,OAAO,EAAE;AAFoE,aAAhE,CALH;AASZ,yBAAatB,CAAC,CAACoB,SAAF,CAAY,+FAAZ,EAA6G;AACxHC,cAAAA,WAAW,EAAE,iJAD2G;AAExH;AACAE,cAAAA,aAAa,EAAEvB,CAAC,CAACoB,SAAF,CAAY,wEAAZ,EAAsF;AACnGC,gBAAAA,WAAW,EAAE,wNADsF;AAEnGG,gBAAAA,UAAU,EAAE,MAFuF;AAGnGF,gBAAAA,OAAO,EAAE;AAH0F,eAAtF;AAHyG,aAA7G;AATD,WAAd;AAoBA,gBAAKG,OAAL,GAAejB,SAAS,CAACkB,GAAV,CAAc,SAAd,CAAf;AACA,gBAAKC,MAAL,GAAc,EAAd;AACA,gBAAKC,WAAL,GAAmB,EAAnB;AACA,gBAAKC,OAAL,GAAe,IAAf;AACA,gBAAKC,YAAL,GAAoB,IAApB;AACA,gBAAKC,SAAL,GAAiB,EAAjB;AACA,gBAAKC,WAAL,GAAmB,IAAnB;AACA,gBAAKC,WAAL,GAAmB,IAAnB;AACA,gBAAKC,cAAL,GAAsB,IAAtB,CA5C6B,CA8C7B;;AACA,gBAAKC,MAAL,CAAYC,EAAZ,CAAe,mBAAf,EAAoC,MAAKC,aAAL,CAAmBC,IAAnB,+BAApC;;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKG,cAAL,CAAoBD,IAApB,+BAAjC;;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKI,eAAL,CAAqBF,IAArB,+BAAjC;;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKK,cAAL,CAAoBH,IAApB,+BAAhC;;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKM,kBAAL,CAAwBJ,IAAxB,+BAArC;;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,MAAKO,QAAL,CAAcL,IAAd,+BAAzB;;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,SAAf,EAA0B,MAAKQ,SAAL,CAAeN,IAAf,+BAA1B,EArD6B,CAuD7B;;;AACA,gBAAKO,SAAL,CAAeV,MAAf,CAAsBC,EAAtB,CAAyBhC,qBAAqB,CAAC0C,IAA/C,EAAqD,MAAKC,YAAL,CAAkBT,IAAlB,+BAArD,EAAmF/B,MAAnF;;AACA,gBAAKsC,SAAL,CAAeV,MAAf,CAAsBC,EAAtB,CAAyBjC,0BAA0B,CAAC2C,IAApD,EAA0D,MAAKE,YAAL,CAAkBV,IAAlB,+BAA1D,EAAwF/B,MAAxF;;AAzD6B;AA0D9B;;;;iBAED,qBAAW;AACT3B,YAAAA,GAAG,CAAC,WAAD,CAAH;AACA,iBAAKqE,kBAAL;AACD;;;iBAED,oBAAU;AAAA;;AACRrE,YAAAA,GAAG,CAAC,UAAD,CAAH,CADQ,CAGR;AACA;;AACA,iBAAKqE,kBAAL,GALQ,CAOR;AACA;;AACA,gBAAI,KAAKpB,OAAT,EAAkB;AAChB,mBAAKA,OAAL,CAAaqB,SAAb,CAAuB,UAACC,CAAD,EAAO;AAC5B,oBAAIA,CAAC,YAAYnD,CAAC,CAACoD,SAAnB,EAA6B;AAC3B,sBAAID,CAAC,CAACE,SAAF,EAAJ,EAAmB;AACjBF,oBAAAA,CAAC,CAACG,IAAF,CAAO,MAAP,EAAe,MAAI,CAACC,kBAAL,CAAwBjB,IAAxB,CAA6B,MAA7B,CAAf;AACD,mBAFD,MAGK;AACH,oBAAA,MAAI,CAACiB,kBAAL;AACD;AACF;AACF,eATD;AAUD;AACF;;;iBAED,yBAAe;AACb3E,YAAAA,GAAG,CAAC,eAAD,CAAH;AACA,iBAAK4E,MAAL;AACD;;;iBAED,0BAAiB;AACf5E,YAAAA,GAAG,CAAC,gBAAD,CAAH;AACA,iBAAK6E,YAAL,CAAkB,SAAlB,EAA6B,2DAA7B,EAA0F,CAA1F;AACD;;;iBAED,2BAAkB;AAChB7E,YAAAA,GAAG,CAAC,iBAAD,CAAH;AACA,iBAAK8E,QAAL,CAAcC,MAAd,CAAqB,KAAKzB,cAA1B;AACD;;;iBAED,sBAAa0B,GAAb,EAAkB;AAChBhF,YAAAA,GAAG,CAAC,cAAD,CAAH;;AACA,gBAAI,KAAK+C,MAAL,CAAYkC,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B;AACD,aAJe,CAMhB;;;AACA,gBAAIC,MAAM,GAAG7E,IAAI,CAAC8E,KAAL,CAAWH,GAAG,CAACI,GAAJ,CAAQC,CAAnB,CAAb;;AACA,gBAAI,KAAKhC,WAAL,IAAoB,KAAKA,WAAL,KAAqB6B,MAA7C,EAAqD;AACnD;AACD,aAVe,CAYhB;;;AACA,gBAAI,KAAK7B,WAAL,IAAoB,IAAxB,EAA6B;AAC3B,mBAAKD,WAAL,CAAiBkC,KAAjB,CAAuB,KAAKrC,OAA5B;AACD;;AAED,iBAAKI,WAAL,GAAmB6B,MAAnB,CAjBgB,CAmBhB;AACA;AACA;;AACA,gBAAIK,GAAG,GAAG,CAAV;AACA,gBAAIC,GAAG,GAAG,KAAKzC,MAAL,CAAYkC,MAAZ,GAAqB,CAA/B;AACA,gBAAIQ,GAAG,GAAG,IAAV;AACA,gBAAIC,KAAK,GAAG,KAAZ;;AACA,mBAAOH,GAAG,IAAIC,GAAd,EAAmB;AACjBC,cAAAA,GAAG,GAAGpF,IAAI,CAAC8E,KAAL,CAAW,CAACK,GAAG,GAAGD,GAAP,IAAc,CAAzB,CAAN;;AACA,kBAAI,KAAKxC,MAAL,CAAY0C,GAAZ,EAAiBE,SAAjB,KAA+B,KAAKtC,WAAxC,EAAqD;AACnDqC,gBAAAA,KAAK,GAAG,IAAR;AACA;AACD,eAHD,MAIK,IAAI,KAAK3C,MAAL,CAAY0C,GAAZ,EAAiBE,SAAjB,GAA6B,KAAKtC,WAAtC,EAAmD;AACtDkC,gBAAAA,GAAG,GAAGE,GAAG,GAAG,CAAZ;AACD,eAFI,MAGA;AACHD,gBAAAA,GAAG,GAAGC,GAAG,GAAG,CAAZ;AACD;AACF,aAtCe,CAwChB;;;AACA,gBAAI,CAACC,KAAD,IAAUD,GAAG,GAAG,CAAhB,IAAqB,KAAK1C,MAAL,CAAY0C,GAAZ,EAAiBE,SAAjB,GAA6B,KAAKtC,WAA3D,EAAwE;AACtEoC,cAAAA,GAAG;AACJ;;AACD,iBAAKrC,WAAL,CAAiBwC,SAAjB,CAA2B,KAAK7C,MAAL,CAAY0C,GAAZ,EAAiBI,QAA5C;AACA,iBAAKjB,MAAL;AACD;;;iBAED,sBAAaI,GAAb,EAAkB;AAChBhF,YAAAA,GAAG,CAAC,cAAD,CAAH,CADgB,CAEhB;;AACA,iBAAKqD,WAAL,GAAmB,IAAnB;;AACA,gBAAI,KAAKD,WAAT,EAAsB;AACpB,mBAAKA,WAAL,CAAiB0C,UAAjB,CAA4B,KAAK7C,OAAjC;AACD;AACF;;;iBAED,8BAAqB;AACnBjD,YAAAA,GAAG,CAAC,oBAAD,CAAH,CADmB,CAEnB;AACA;;AACA,iBAAK8E,QAAL,CAAcC,MAAd,CAAqB,KAAKzB,cAA1B;AACA,gBAAIyC,GAAG,GAAG,KAAK9C,OAAf;AACA,iBAAKK,cAAL,GAAsB,KAAKwB,QAAL,CAAc,YAAU;AAC5C,kBAAIiB,GAAJ,EAAS;AACP/F,gBAAAA,GAAG,CAAC,uBAAD,CAAH;AACA+F,gBAAAA,GAAG,CAACC,cAAJ,CAAmB,IAAnB;AACD;AAAC,aAJkB,EAIhB,GAJgB,CAAtB;AAMD;;;iBAED,2BAAkB;AAChB,gBAAIC,OAAO,GAAG,KAAKhD,OAAL,CAAaf,eAAb,CAA6B+D,OAA7B,EAAd;;AACA,gBAAIA,OAAO,IAAI,KAAKlE,KAAL,CAAWG,eAA1B,EAA0C;AACxC,kBAAI+D,OAAJ,EAAY;AACV,qBAAKhD,OAAL,CAAaf,eAAb,CAA6BgE,OAA7B;AACD,eAFD,MAGI;AACF,qBAAKjD,OAAL,CAAaf,eAAb,CAA6BiE,MAA7B;AACD;AACF;AACF;;;iBAED,6BAAoB;AAAA;;AAClB,gBAAIC,MAAM,GAAGC,OAAO,CAAC,KAAKpD,OAAN,CAApB;AACA,iBAAKqD,QAAL;;AACA,gBAAIF,MAAJ,EAAW;AACT;AACA,mBAAKnD,OAAL,CAAaqB,SAAb,CAAuB,UAACiC,KAAD,EAAW;AAChCA,gBAAAA,KAAK,CAACT,UAAN,CAAiB,MAAI,CAAC7C,OAAtB;AACD,eAFD;AAGA,mBAAKV,MAAL,CAAY,KAAKR,KAAL,CAAWI,YAAvB,EAAqCmD,KAArC,CAA2C,KAAKrC,OAAhD,EALS,CAOT;;AACA,mBAAKA,OAAL,CAAauD,aAAb,CAA2B,KAAKtD,YAAhC;;AACA,kBAAI,KAAKnB,KAAL,CAAWK,gBAAf,EAAgC;AAC9B,qBAAKa,OAAL,CAAawD,UAAb,CAAwB,KAAKvD,YAA7B;AACD;AACF;;AACD,iBAAKwD,YAAL;AACD;;;iBAED,oBAAW;AAAA;;AACT1G,YAAAA,GAAG,CAAC,UAAD,CAAH,CADS,CAET;;AACA,gBAAI,KAAKiD,OAAT,EAAkB;AAChB,mBAAKE,SAAL,CAAewD,OAAf,CAAuB,UAAAC,CAAC;AAAA,uBAAEA,CAAC,CAACd,UAAF,CAAa,MAAI,CAAC7C,OAAlB,CAAF;AAAA,eAAxB;AACA,mBAAKmB,YAAL;AACA;AACD,aAPQ,CAST;;;AACA,iBAAKnB,OAAL,GAAe7B,CAAC,CAAC2E,GAAF,CAAM,cAAc,KAAKhE,KAAL,CAAW8E,EAA/B,EAAmC;AAChD3E,cAAAA,eAAe,EAAE,KAAKH,KAAL,CAAWG,eADoB;AAEhD4E,cAAAA,QAAQ,EAAE,GAFsC;AAGhDC,cAAAA,SAAS,EAAE;AAHqC,aAAnC,CAAf,CAVS,CAgBT;;AACA,iBAAK7D,YAAL,GAAoB9B,CAAC,CAAC4F,OAAF,CAAUzE,MAAV,CAAiB,KAAKA,MAAtB,CAApB,CAjBS,CAmBT;;AACA,gBAAI,KAAKR,KAAL,CAAWK,gBAAf,EAAgC;AAC9B,mBAAKa,OAAL,CAAawD,UAAb,CAAwB,KAAKvD,YAA7B;AACD,aAtBQ,CAwBT;;;AACA,iBAAKX,MAAL,CAAY,KAAKR,KAAL,CAAWI,YAAvB,EAAqCmD,KAArC,CAA2C,KAAKrC,OAAhD,EAzBS,CA2BT;;AACA,iBAAKG,WAAL,GAAmBhC,CAAC,CAAC6F,YAAF,CAAe7F,CAAC,CAACC,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAf,EAA+B;AAChD6F,cAAAA,KAAK,EAAE,OADyC;AAEhDC,cAAAA,SAAS,EAAE,KAAKpF,KAAL,CAAWO,UAF0B;AAGhD8E,cAAAA,WAAW,EAAE,CAHmC;AAIhDC,cAAAA,MAAM,EAAE,CAJwC;AAKhDC,cAAAA,MAAM,EAAE;AALwC,aAA/B,CAAnB,CA5BS,CAoCT;;AACA,iBAAKrE,OAAL,CAAaO,EAAb,CAAgB,iBAAhB,EAAmC,KAAK+D,kBAAL,CAAwB7D,IAAxB,CAA6B,IAA7B,CAAnC;AACA,iBAAKT,OAAL,CAAaO,EAAb,CAAgB,YAAhB,EAA8B,KAAKgE,YAAL,CAAkB9D,IAAlB,CAAuB,IAAvB,CAA9B;AACD;;;iBAED,4BAAmB+D,CAAnB,EAAsB;AACpB;AACA;AACA,gBAAI,KAAKxE,OAAL,CAAaN,aAAjB,EAAgC;AAC9B,mBAAKM,OAAL,CAAaN,aAAb,CAA2BmD,UAA3B,CAAsC,KAAK7C,OAA3C;AACA,mBAAKA,OAAL,CAAaN,aAAb,GAA6B,IAA7B;AACD;;AACD,gBAAI+E,OAAO,GAAGD,CAAC,CAAClB,KAAF,CAAQoB,OAAR,CAAgBhF,aAA9B;;AACA,gBAAI+E,OAAJ,EAAa;AACXA,cAAAA,OAAO,CAACpC,KAAR,CAAc,KAAKrC,OAAnB;AACAyE,cAAAA,OAAO,CAACE,SAAR,CAAkBH,CAAC,CAAClB,KAAF,CAAQoB,OAAR,CAAgBE,MAAhB,GAAyB,CAA3C;AACA,mBAAK5E,OAAL,CAAaN,aAAb,GAA6B+E,OAA7B;AACD;AACF;;;iBAED,sBAAaD,CAAb,EAAgB;AACdzH,YAAAA,GAAG,CAAC,cAAD,CAAH,CADc,CAEd;;AACA,gBAAM8H,MAAM,GAAG,KAAK/E,MAAL,CAAYgF,MAAZ,CACb,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACb,kBAAIR,CAAC,CAACS,aAAF,CAAgBC,QAAhB,CAAyBF,CAAC,CAACpC,QAA3B,CAAJ,EAA0C;AACxCmC,gBAAAA,CAAC,CAACI,IAAF,GAAS/H,IAAI,CAACkF,GAAL,CAASyC,CAAC,CAACI,IAAX,EAAiBH,CAAC,CAACtC,SAAnB,CAAT;AACAqC,gBAAAA,CAAC,CAACK,EAAF,GAAOhI,IAAI,CAACmF,GAAL,CAASwC,CAAC,CAACK,EAAX,EAAeJ,CAAC,CAACtC,SAAjB,CAAP;AACD;;AACD,qBAAOqC,CAAP;AACD,aAPY,EAQb;AAACI,cAAAA,IAAI,EAAEE,QAAP;AAAiBD,cAAAA,EAAE,EAAE,CAACC;AAAtB,aARa,CAAf,CAHc,CAcd;;AACA,gBAAIC,QAAQ,CAACT,MAAM,CAACM,IAAR,CAAR,IAAyBG,QAAQ,CAACT,MAAM,CAACO,EAAR,CAArC,EAAkD;AAChD;AACA;AACA,mBAAKxF,OAAL,CAAa2F,OAAb,CAAqB;AACnBJ,gBAAAA,IAAI,EAAE9G,MAAM,CAACmH,GAAP,CAAWX,MAAM,CAACM,IAAlB,CADa;AAEnBC,gBAAAA,EAAE,EAAE/G,MAAM,CAACmH,GAAP,CAAWX,MAAM,CAACO,EAAlB;AAFe,eAArB;AAID;;AACD,iBAAKzD,MAAL;AACD,W,CAED;;;;iBACA,wBAAe;AACb5E,YAAAA,GAAG,CAAC,cAAD,CAAH;AAEA,iBAAKmD,SAAL,CAAe8B,MAAf,GAAwB,CAAxB;;AACA,iBAAK,IAAIyD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1F,WAAL,CAAiBiC,MAAjB,GAA0B,CAA9C,EAAiDyD,CAAC,EAAlD,EAAsD;AACpD,kBAAMC,UAAU,GAAG,KAAK5F,MAAL,CAAY6F,KAAZ,CAAkB,KAAK5F,WAAL,CAAiB0F,CAAjB,CAAlB,EAAuC,KAAK1F,WAAL,CAAiB0F,CAAC,GAAC,CAAnB,CAAvC,CAAnB;AACA,mBAAKvF,SAAL,CAAe0F,IAAf,CACEzH,CAAC,CAAC0H,QAAF,CACEH,UAAU,CAAC5C,GAAX,CAAe,UAAAV,CAAC;AAAA,uBAAIA,CAAC,CAACQ,QAAN;AAAA,eAAhB,EAAgC,IAAhC,CADF,EACyC;AACrCqB,gBAAAA,KAAK,EAAE,KAAKnF,KAAL,CAAWM,SADmB;AAErCgF,gBAAAA,MAAM,EAAE;AAF6B,eADzC,EAKE/B,KALF,CAKQ,KAAKrC,OALb,CADF;AAQD;;AACD,iBAAK8F,SAAL;AACD;;;iBAED,qBAAW;AACT/I,YAAAA,GAAG,CAAC,WAAD,CAAH;;AACA,gBAAI,KAAK+B,KAAL,CAAWE,QAAX,IAAuB,KAAKkB,SAAL,CAAe8B,MAAf,GAAsB,CAAjD,EAAmD;AACjD,kBAAI6C,MAAM,GAAG,KAAK3E,SAAL,CAAe,CAAf,EAAkB6F,SAAlB,EAAb;AACA,mBAAK7F,SAAL,CAAewD,OAAf,CAAuB,UAAAC,CAAC;AAAA,uBAAIkB,MAAM,CAACmB,MAAP,CAAcrC,CAAC,CAACoC,SAAF,EAAd,CAAJ;AAAA,eAAxB;;AAEA,kBAAIlB,MAAM,CAACoB,OAAP,EAAJ,EAAqB;AACnB,qBAAKjG,OAAL,CAAakG,SAAb,CAAuBrB,MAAvB;AACD,eAFD,MAGK;AACH,qBAAK7E,OAAL,CAAamG,OAAb,CAAqB,CAAC,CAAD,EAAI,CAAJ,CAArB,EAA6B,CAA7B;AACD;AACF;;AACD,iBAAKxE,MAAL;AACD;;;iBAED,yBAAgB;AAAA;;AACd5E,YAAAA,GAAG,CAAC,eAAD,CAAH;AACA,iBAAKmD,SAAL,CAAewD,OAAf,CAAuB,UAAAC,CAAC,EAAI;AAC1BA,cAAAA,CAAC,CAACyC,QAAF,CAAW;AACTnC,gBAAAA,KAAK,EAAE,MAAI,CAACnF,KAAL,CAAWM;AADT,eAAX;AAGD,aAJD;;AAKA,gBAAI,KAAKe,WAAT,EAAqB;AACnB,mBAAKA,WAAL,CAAiBiG,QAAjB,CAA0B;AACxBlC,gBAAAA,SAAS,EAAE,KAAKpF,KAAL,CAAWO;AADE,eAA1B;AAGD;;AACD,iBAAKsC,MAAL;AACD;;;iBAED,wBAAe0E,IAAf,EAAqB;AAAA;;AACnBtJ,YAAAA,GAAG,CAAC,gBAAD,CAAH;AACA,iBAAKsG,QAAL;;AAEA,gBAAIgD,IAAI,CAACrE,MAAL,KAAgB,CAAhB,IAAqBqE,IAAI,CAACrE,MAAL,KAAgB,CAAzC,EAA4C;AAC1C;AACA,mBAAKhC,OAAL,CAAamG,OAAb,CAAqB,CAAC,CAAD,EAAI,CAAJ,CAArB,EAA6B,CAA7B;AACA,mBAAKxE,MAAL;AACA;AACD,aATkB,CAWnB;AACA;;;AACA,iBAAK7B,MAAL,CAAYkC,MAAZ,GAAqB,CAArB;AACA,iBAAKjC,WAAL,CAAiBiC,MAAjB,GAA0B,CAA1B;AACA,iBAAKjC,WAAL,CAAiB6F,IAAjB,CAAsB,CAAtB;AACA,gBAAMU,IAAI,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,UAArB;AACA,gBAAMC,IAAI,GAAGH,IAAI,CAAC,CAAD,CAAJ,CAAQE,UAArB;;AAjBmB,uCAkBVd,CAlBU;AAmBjB,kBAAIa,IAAI,CAACb,CAAD,CAAJ,CAAQ,CAAR,KAAc,IAAd,IAAsBe,IAAI,CAACf,CAAD,CAAJ,CAAQ,CAAR,KAAc,IAApC,IACCa,IAAI,CAACb,CAAD,CAAJ,CAAQ,CAAR,KAAc,CAAd,IAAmBe,IAAI,CAACf,CAAD,CAAJ,CAAQ,CAAR,KAAc,CADlC,IAEAa,IAAI,CAACb,CAAD,CAAJ,CAAQ,CAAR,MAAee,IAAI,CAACf,CAAD,CAAJ,CAAQ,CAAR,CAFnB,EAE+B;AAC7B;AACD;;AACD,kBAAMtD,GAAG,GAAGhE,CAAC,CAACC,MAAF,CAASkI,IAAI,CAACb,CAAD,CAAJ,CAAQ,CAAR,CAAT,EAAqBe,IAAI,CAACf,CAAD,CAAJ,CAAQ,CAAR,CAArB,CAAZ;;AAEA,kBAAI,MAAI,CAAC3F,MAAL,CAAYkC,MAAZ,GAAqB,CAAzB,EAA2B;AACzB;AACA;AACA;AACA,oBAAMyE,SAAS,GAAGxJ,wBAAwB,CAAC,MAAI,CAAC6C,MAAL,CAAY,MAAI,CAACA,MAAL,CAAYkC,MAAZ,GAAmB,CAA/B,EAAkCY,QAAnC,EAA6CT,GAA7C,CAA1C;;AACA,oBAAIsE,SAAS,IAAI,IAAjB,EAAsB;AACpB;AACA,sBAAMC,QAAQ,GAAG,MAAI,CAAC5G,MAAL,CAAY,MAAI,CAACA,MAAL,CAAYkC,MAAZ,GAAmB,CAA/B,EAAkCU,SAAnD;AACA+D,kBAAAA,SAAS,CAAC/C,OAAV,CAAkB,UAAAC,CAAC,EAAI;AACrB,oBAAA,MAAI,CAAC7D,MAAL,CAAY8F,IAAZ,CAAiB;AACfhD,sBAAAA,QAAQ,EAAEe,CADK;AAEfjB,sBAAAA,SAAS,EAAEgE,QAAQ,GAAI,CAACJ,IAAI,CAACb,CAAD,CAAJ,CAAQ,CAAR,IAAaiB,QAAd,IAAwB;AAFhC,qBAAjB;AAID,mBALD,EAHoB,CASpB;;AACA,kBAAA,MAAI,CAAC3G,WAAL,CAAiB6F,IAAjB,CAAsB,MAAI,CAAC9F,MAAL,CAAYkC,MAAZ,GAAqB,CAA3C;AACD;AACF;;AAED,cAAA,MAAI,CAAClC,MAAL,CAAY8F,IAAZ,CAAiB;AACfhD,gBAAAA,QAAQ,EAAET,GADK;AAEfO,gBAAAA,SAAS,EAAE4D,IAAI,CAACb,CAAD,CAAJ,CAAQ,CAAR;AAFI,eAAjB;AA7CiB;;AAkBnB,iBAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGa,IAAI,CAACtE,MAAzB,EAAiCyD,CAAC,EAAlC,EAAsC;AAAA,+BAA7BA,CAA6B;;AAAA,uCAIlC;AA4BH;;AACD,iBAAK1F,WAAL,CAAiB6F,IAAjB,CAAsB,KAAK9F,MAAL,CAAYkC,MAAlC;AACA,iBAAKyB,YAAL;AACD;;;iBAED,4BAAmBkD,YAAnB,EAAiC;AAC/B5J,YAAAA,GAAG,CAAC,gBAAD,CAAH;AACA,iBAAK6D,cAAL,CAAoB+F,YAApB;AACD;;;;QA5Y+BnI,gB;;AA+YlCC,MAAAA,YAAY,CAACmI,WAAb,GAA2B,sBAA3B","sourcesContent":["import L from './leaflet/leaflet.js';\nimport moment from 'moment';\n\nimport { LegacyGraphHoverClearEvent, LegacyGraphHoverEvent } from '@grafana/data';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\n\nimport './leaflet/leaflet.css!';\nimport './partials/module.css!';\n\n\nfunction log(msg) {\n  // uncomment for debugging\n  //console.log(msg);\n}\n\nfunction getAntimeridianMidpoints(start, end) {\n  // See https://stackoverflow.com/a/65870755/369977\n  if (Math.abs(start.lng - end.lng) <= 180.0){\n    return null;\n  }\n  const start_dist_to_antimeridian = start.lng > 0 ? 180 - start.lng : 180 + start.lng;\n  const end_dist_to_antimeridian = end.lng > 0 ? 180 - end.lng : 180 + end.lng;\n  const lat_difference = Math.abs(start.lat - end.lat);\n  const alpha_angle = Math.atan(lat_difference / (start_dist_to_antimeridian + end_dist_to_antimeridian)) * (180 / Math.PI) * (start.lng > 0 ? 1 : -1);\n  const lat_diff_at_antimeridian = Math.tan(alpha_angle * Math.PI / 180) * start_dist_to_antimeridian;\n  const intersection_lat = start.lat + lat_diff_at_antimeridian;\n  const first_line_end = [intersection_lat, start.lng > 0 ? 180 : -180];\n  const second_line_start = [intersection_lat, end.lng > 0 ? 180 : -180];\n\n  return [L.latLng(first_line_end), L.latLng(second_line_start)];\n}\n\nexport class TrackMapCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    log(\"constructor\");\n\n    _.defaults(this.panel, {\n      maxDataPoints: 500,\n      autoZoom: true,\n      scrollWheelZoom: false,\n      defaultLayer: 'OpenStreetMap',\n      showLayerChanger: true,\n      lineColor: 'red',\n      pointColor: 'royalblue',\n    });\n\n    // Save layers globally in order to use them in options\n    this.layers = {\n      'OpenStreetMap': L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n        maxZoom: 19\n      }),\n      'OpenTopoMap': L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {\n        attribution: 'Map data: &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)',\n        maxZoom: 17\n      }),\n      'Satellite': L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\n        attribution: 'Imagery &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\n        // This map doesn't have labels so we force a label-only layer on top of it\n        forcedOverlay: L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/toner-labels/{z}/{x}/{y}.png', {\n          attribution: 'Labels by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n          subdomains: 'abcd',\n          maxZoom: 20,\n        })\n      })\n    };\n\n    this.timeSrv = $injector.get('timeSrv');\n    this.coords = [];\n    this.coordSlices = [];\n    this.leafMap = null;\n    this.layerChanger = null;\n    this.polylines = [];\n    this.hoverMarker = null;\n    this.hoverTarget = null;\n    this.setSizePromise = null;\n\n    // Panel events\n    this.events.on('panel-initialized', this.onInitialized.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n\n    // Global events\n    this.dashboard.events.on(LegacyGraphHoverEvent.type, this.onPanelHover.bind(this), $scope);\n    this.dashboard.events.on(LegacyGraphHoverClearEvent.type, this.onPanelClear.bind(this), $scope);\n  }\n\n  onRefresh(){\n    log(\"onRefresh\")\n    this.onPanelSizeChanged();\n  }\n\n  onRender(){\n    log(\"onRender\")\n\n    // No specific event for panel size changing anymore\n    // Render is called when the size changes so just call it here\n    this.onPanelSizeChanged();\n\n    // Wait until there is at least one GridLayer with fully loaded\n    // tiles before calling renderingCompleted\n    if (this.leafMap) {\n      this.leafMap.eachLayer((l) => {\n        if (l instanceof L.GridLayer){\n          if (l.isLoading()) {\n            l.once('load', this.renderingCompleted.bind(this));\n          }\n          else {\n            this.renderingCompleted();\n          }\n        }\n      });\n    }\n  }\n\n  onInitialized(){\n    log(\"onInitialized\");\n    this.render();\n  }\n\n  onInitEditMode() {\n    log(\"onInitEditMode\");\n    this.addEditorTab('Options', 'public/plugins/pr0ps-trackmap-panel/partials/options.html', 2);\n  }\n\n  onPanelTeardown() {\n    log(\"onPanelTeardown\");\n    this.$timeout.cancel(this.setSizePromise);\n  }\n\n  onPanelHover(evt) {\n    log(\"onPanelHover\");\n    if (this.coords.length === 0) {\n      return;\n    }\n\n    // check if we are already showing the correct hoverMarker\n    let target = Math.floor(evt.pos.x);\n    if (this.hoverTarget && this.hoverTarget === target) {\n      return;\n    }\n\n    // check for initial show of the marker\n    if (this.hoverTarget == null){\n      this.hoverMarker.addTo(this.leafMap);\n    }\n\n    this.hoverTarget = target;\n\n    // Find the currently selected time and move the hoverMarker to it\n    // Note that an exact match isn't always going to work due to rounding so\n    // we clean that up later (still more efficient)\n    let min = 0;\n    let max = this.coords.length - 1;\n    let idx = null;\n    let exact = false;\n    while (min <= max) {\n      idx = Math.floor((max + min) / 2);\n      if (this.coords[idx].timestamp === this.hoverTarget) {\n        exact = true;\n        break;\n      }\n      else if (this.coords[idx].timestamp < this.hoverTarget) {\n        min = idx + 1;\n      }\n      else {\n        max = idx - 1;\n      }\n    }\n\n    // Correct the case where we are +1 index off\n    if (!exact && idx > 0 && this.coords[idx].timestamp > this.hoverTarget) {\n      idx--;\n    }\n    this.hoverMarker.setLatLng(this.coords[idx].position);\n    this.render();\n  }\n\n  onPanelClear(evt) {\n    log(\"onPanelClear\");\n    // clear the highlighted circle\n    this.hoverTarget = null;\n    if (this.hoverMarker) {\n      this.hoverMarker.removeFrom(this.leafMap);\n    }\n  }\n\n  onPanelSizeChanged() {\n    log(\"onPanelSizeChanged\");\n    // KLUDGE: This event is fired too soon - we need to delay doing the actual\n    //         size invalidation until after the panel has actually been resized.\n    this.$timeout.cancel(this.setSizePromise);\n    let map = this.leafMap;\n    this.setSizePromise = this.$timeout(function(){\n      if (map) {\n        log(\"Invalidating map size\");\n        map.invalidateSize(true);\n      }}, 500\n    );\n  }\n\n  applyScrollZoom() {\n    let enabled = this.leafMap.scrollWheelZoom.enabled();\n    if (enabled != this.panel.scrollWheelZoom){\n      if (enabled){\n        this.leafMap.scrollWheelZoom.disable();\n      }\n      else{\n        this.leafMap.scrollWheelZoom.enable();\n      }\n    }\n  }\n\n  applyDefaultLayer() {\n    let hadMap = Boolean(this.leafMap);\n    this.setupMap();\n    if (hadMap){\n      // Re-add the default layer\n      this.leafMap.eachLayer((layer) => {\n        layer.removeFrom(this.leafMap);\n      });\n      this.layers[this.panel.defaultLayer].addTo(this.leafMap);\n\n      // Hide/show the layer switcher\n      this.leafMap.removeControl(this.layerChanger)\n      if (this.panel.showLayerChanger){\n        this.leafMap.addControl(this.layerChanger);\n      }\n    }\n    this.addDataToMap();\n  }\n\n  setupMap() {\n    log(\"setupMap\");\n    // Create the map or get it back in a clean state if it already exists\n    if (this.leafMap) {\n      this.polylines.forEach(p=>p.removeFrom(this.leafMap));\n      this.onPanelClear();\n      return;\n    }\n\n    // Create the map\n    this.leafMap = L.map('trackmap-' + this.panel.id, {\n      scrollWheelZoom: this.panel.scrollWheelZoom,\n      zoomSnap: 0.5,\n      zoomDelta: 1,\n    });\n\n    // Create the layer changer\n    this.layerChanger = L.control.layers(this.layers)\n\n    // Add layers to the control widget\n    if (this.panel.showLayerChanger){\n      this.leafMap.addControl(this.layerChanger);\n    }\n\n    // Add default layer to map\n    this.layers[this.panel.defaultLayer].addTo(this.leafMap);\n\n    // Hover marker\n    this.hoverMarker = L.circleMarker(L.latLng(0, 0), {\n      color: 'white',\n      fillColor: this.panel.pointColor,\n      fillOpacity: 1,\n      weight: 2,\n      radius: 7\n    });\n\n    // Events\n    this.leafMap.on('baselayerchange', this.mapBaseLayerChange.bind(this));\n    this.leafMap.on('boxzoomend', this.mapZoomToBox.bind(this));\n  }\n\n  mapBaseLayerChange(e) {\n    // If a tileLayer has a 'forcedOverlay' attribute, always enable/disable it\n    // along with the layer\n    if (this.leafMap.forcedOverlay) {\n      this.leafMap.forcedOverlay.removeFrom(this.leafMap);\n      this.leafMap.forcedOverlay = null;\n    }\n    let overlay = e.layer.options.forcedOverlay;\n    if (overlay) {\n      overlay.addTo(this.leafMap);\n      overlay.setZIndex(e.layer.options.zIndex + 1);\n      this.leafMap.forcedOverlay = overlay;\n    }\n  }\n\n  mapZoomToBox(e) {\n    log(\"mapZoomToBox\");\n    // Find time bounds of selected coordinates\n    const bounds = this.coords.reduce(\n      function(t, c) {\n        if (e.boxZoomBounds.contains(c.position)) {\n          t.from = Math.min(t.from, c.timestamp);\n          t.to = Math.max(t.to, c.timestamp);\n        }\n        return t;\n      },\n      {from: Infinity, to: -Infinity}\n    );\n\n    // Set the global time range\n    if (isFinite(bounds.from) && isFinite(bounds.to)) {\n      // KLUDGE: Create moment objects here to avoid a TypeError that\n      //         occurs when Grafana processes normal numbers\n      this.timeSrv.setTime({\n        from: moment.utc(bounds.from),\n        to: moment.utc(bounds.to)\n      });\n    }\n    this.render();\n  }\n\n  // Add the circles and polyline(s) to the map\n  addDataToMap() {\n    log(\"addDataToMap\");\n\n    this.polylines.length = 0;\n    for (let i = 0; i < this.coordSlices.length - 1; i++) {\n      const coordSlice = this.coords.slice(this.coordSlices[i], this.coordSlices[i+1])\n      this.polylines.push(\n        L.polyline(\n          coordSlice.map(x => x.position, this), {\n            color: this.panel.lineColor,\n            weight: 3,\n          }\n        ).addTo(this.leafMap)\n      );\n    }\n    this.zoomToFit();\n  }\n\n  zoomToFit(){\n    log(\"zoomToFit\");\n    if (this.panel.autoZoom && this.polylines.length>0){\n      var bounds = this.polylines[0].getBounds();\n      this.polylines.forEach(p => bounds.extend(p.getBounds()));\n\n      if (bounds.isValid()){\n        this.leafMap.fitBounds(bounds);\n      }\n      else {\n        this.leafMap.setView([0, 0], 1);\n      }\n    }\n    this.render();\n  }\n\n  refreshColors() {\n    log(\"refreshColors\");\n    this.polylines.forEach(p => {\n      p.setStyle({\n        color: this.panel.lineColor\n      })\n    });\n    if (this.hoverMarker){\n      this.hoverMarker.setStyle({\n        fillColor: this.panel.pointColor,\n      });\n    }\n    this.render();\n  }\n\n  onDataReceived(data) {\n    log(\"onDataReceived\");\n    this.setupMap();\n\n    if (data.length === 0 || data.length !== 2) {\n      // No data or incorrect data, show a world map and abort\n      this.leafMap.setView([0, 0], 1);\n      this.render();\n      return;\n    }\n\n    // Asumption is that there are an equal number of properly matched timestamps\n    // TODO: proper joining by timestamp?\n    this.coords.length = 0;\n    this.coordSlices.length = 0;\n    this.coordSlices.push(0)\n    const lats = data[0].datapoints;\n    const lons = data[1].datapoints;\n    for (let i = 0; i < lats.length; i++) {\n      if (lats[i][0] == null || lons[i][0] == null ||\n          (lats[i][0] == 0 && lons[i][0] == 0) ||\n          lats[i][1] !== lons[i][1]) {\n        continue;\n      }\n      const pos = L.latLng(lats[i][0], lons[i][0])\n\n      if (this.coords.length > 0){\n        // Deal with the line between last point and this one crossing the antimeridian:\n        // Draw a line from the last point to the antimeridian and another from the anitimeridian\n        // to the current point.\n        const midpoints = getAntimeridianMidpoints(this.coords[this.coords.length-1].position, pos);\n        if (midpoints != null){\n          // Crossed the antimeridian, add the points to the coords array\n          const lastTime = this.coords[this.coords.length-1].timestamp\n          midpoints.forEach(p => {\n            this.coords.push({\n              position: p,\n              timestamp: lastTime + ((lats[i][1] - lastTime)/2)\n            })\n          });\n          // Note that we need to start drawing a new line between the added points\n          this.coordSlices.push(this.coords.length - 1)\n        }\n      }\n\n      this.coords.push({\n        position: pos,\n        timestamp: lats[i][1]\n      });\n\n    }\n    this.coordSlices.push(this.coords.length)\n    this.addDataToMap();\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    log(\"onSnapshotLoad\");\n    this.onDataReceived(snapshotData);\n  }\n}\n\nTrackMapCtrl.templateUrl = 'partials/module.html';"],"file":"trackmap_ctrl.js"}